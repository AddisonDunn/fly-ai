[{"/Users/addisondunn/projects/fly-ai/src/index.js":"1","/Users/addisondunn/projects/fly-ai/src/reportWebVitals.js":"2","/Users/addisondunn/projects/fly-ai/src/components/App.js":"3","/Users/addisondunn/projects/fly-ai/src/components/StartingPage.jsx":"4","/Users/addisondunn/projects/fly-ai/src/components/SearchPage.jsx":"5","/Users/addisondunn/projects/fly-ai/src/components/SearchBarContainer.jsx":"6","/Users/addisondunn/projects/fly-ai/src/components/SearchResults.jsx":"7","/Users/addisondunn/projects/fly-ai/src/components/NavigationBar.jsx":"8","/Users/addisondunn/projects/fly-ai/src/components/SearchBar.jsx":"9","/Users/addisondunn/projects/fly-ai/src/components/Quote.jsx":"10"},{"size":607,"mtime":1618260224212,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1618063985773,"results":"13","hashOfConfig":"12"},{"size":524,"mtime":1618495232790,"results":"14","hashOfConfig":"12"},{"size":983,"mtime":1618498211851,"results":"15","hashOfConfig":"12"},{"size":602,"mtime":1618434856814,"results":"16","hashOfConfig":"12"},{"size":2652,"mtime":1618499318953,"results":"17","hashOfConfig":"12"},{"size":4117,"mtime":1618496271047,"results":"18","hashOfConfig":"12"},{"size":1000,"mtime":1618496362720,"results":"19","hashOfConfig":"12"},{"size":3058,"mtime":1618496619858,"results":"20","hashOfConfig":"12"},{"size":1232,"mtime":1618494607440,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"pmwy8q",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/addisondunn/projects/fly-ai/src/index.js",[],["45","46"],"/Users/addisondunn/projects/fly-ai/src/reportWebVitals.js",[],"/Users/addisondunn/projects/fly-ai/src/components/App.js",[],"/Users/addisondunn/projects/fly-ai/src/components/StartingPage.jsx",[],"/Users/addisondunn/projects/fly-ai/src/components/SearchPage.jsx",[],"/Users/addisondunn/projects/fly-ai/src/components/SearchBarContainer.jsx",[],"/Users/addisondunn/projects/fly-ai/src/components/SearchResults.jsx",["47"],"import { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport qs from 'query-string';\nimport Grid from '@material-ui/core/Grid';\nimport Quote from \"./Quote\";\nimport { Container } from \"@material-ui/core\";\nimport \"./ResultsPage.css\";\n\n\n\nfunction SearchResults() {\n\n    let port_number = null;\n    let quote_query_url = \"\";\n    if (process.env.NODE_ENV === \"development\") {\n        port_number = 8080; // development\n        quote_query_url = \"http://localhost:\" + port_number + \"/search?\";\n    }\n    else if (process.env.NODE_ENV === \"production\") {\n        port_number = process.env.PORT || 80; //production\n        quote_query_url = \"/search?\";\n    }\n\n\n    let history = useHistory();\n\n    const [error, setError] = useState(null);\n    const [didSearchResultsLoad, setDidSearchResultsLoad] = useState(false);\n    const [quotes, setQuotes] = useState([]);\n    const [carriers, setCarriers] = useState([]);\n    const [places, setPlaces] = useState([]);\n\n    useEffect(() => {\n        const query = {originID: history.location.state[0],\n            destinationID: history.location.state[1],\n            departureDate: history.location.state[2],\n            arrivalDate: history.location.state[3]\n        }\n        console.log(qs.stringify(query))\n        fetch(quote_query_url + qs.stringify(query), {\n            method: \"GET\"\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setDidSearchResultsLoad(true);\n                    setQuotes(\n                        result.Quotes\n                    );\n                    setCarriers(result.Carriers);\n                    setPlaces(result.Places);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setDidSearchResultsLoad(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    function findCarriers(quoteCarrierIDs) {\n        let airlineString = \"\";\n        let nextCarrier = {};\n        quoteCarrierIDs.forEach(carrierID => {\n            if(airlineString) {\n                airlineString += \", \"\n            }\n            nextCarrier = carriers.find(carrier => carrier.CarrierId === carrierID);\n            if(nextCarrier) {\n                airlineString += nextCarrier.Name;\n            }\n            \n        });\n        return airlineString;\n    }\n\n    function findAirport(id) {\n        let airportString = \"\";\n        var airport = places.find(airport => airport.PlaceId === id)\n        if(airport) {\n            airportString += airport.Name;\n            airportString += \" (\" + airport.IataCode + \")\";\n        }\n        return airportString;\n    }\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!didSearchResultsLoad) {\n        return <div>Loading...</div>;\n      } else if(!quotes) {\n        return <div>No Quotes found. </div>\n      }\n        else {\n        return (<div>\n\n            { console.log(quotes) }\n\n            <Container maxWidth=\"md\" className=\"resultsContainer\"> \n\n            <Grid container direction=\"column\" justify=\"center\" spacing={3}>\n            {/* <Grid item >\n            <Quote id={quotes[0].QuoteId} minPrice={quotes[0].MinPrice} isDirect={quotes[0].Direct} />\n            </Grid> */}\n            {quotes.map( (elem) =>\n                <Grid key={elem.QuoteId} item style={{flexGrow: 1}}>\n                        <Quote \n                        minPrice={elem.MinPrice} \n                        isDirect={elem.Direct} \n                        airline={findCarriers(elem.OutboundLeg.CarrierIds)}\n                        departureAirport={findAirport(elem.OutboundLeg.OriginId)}\n                        arrivalAirport={findAirport(elem.OutboundLeg.DestinationId)} />\n                </Grid>\n              )}\n            \n            </Grid>\n\n            </Container>\n            </div>\n        );\n      }\n\n\n}\n\nexport default SearchResults;","/Users/addisondunn/projects/fly-ai/src/components/NavigationBar.jsx",[],"/Users/addisondunn/projects/fly-ai/src/components/SearchBar.jsx",["48","49"],"import TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport \"./StartingPage.css\";\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport FlightLandIcon from '@material-ui/icons/FlightLand';\nimport Grid from '@material-ui/core/Grid';\nimport { useEffect, useState } from \"react\";\n\n\n\nfunction SearchBar(props) {\n\n  let port_number = 8080;\n  let location_query_url = \"\";\n  if (process.env.NODE_ENV === \"development\") {\n    port_number = 8080; // development\n    location_query_url = \"http://localhost:\" + port_number + \"/getLocation/\";\n  }\n  else if (process.env.NODE_ENV === \"production\") {\n    port_number = process.env.PORT || 80; //production\n    location_query_url = \"/getLocation/\";\n  }\n  // location_query_url = \"http://localhost:\" + port_number + \"/getLocation/\";\n\n  const [error, setError] = useState(null);\n  const [didLocationsLoad, setDidLocationsLoad] = useState(false);\n  const [locationResults, setLocationResults] = useState([]);\n  const [searchText, updateSearchText] = useState(\"\");\n\n\n  useEffect(() => {\n    if(!searchText) {\n      return;\n    }\n    fetch(location_query_url + searchText)\n          .then(res => res.json())\n          .then(\n              (result) => {\n                  setDidLocationsLoad(true);\n                  setLocationResults(result.map(place => {\n                    const locationQueryString = place.PlaceName + \", \" + (place.RegionId? place.RegionId: place.CountryName ) + \" (\" + ( place.PlaceId.substring(0, place.PlaceId.length - 4))  + \")\";\n                    return {locationName: locationQueryString, placeID: place.PlaceId};\n                  }));\n              },\n              // Note: it's important to handle errors here\n              // instead of a catch() block so that we don't swallow\n              // exceptions from actual bugs in components.\n              (error) => {\n                  setDidLocationsLoad(true);\n                  setError(error);\n              }\n          )\n  }, [searchText])\n\n  function handleInputText(event, value) {\n    updateSearchText(value);\n  }\n\n  function onCitySelection(event, value) {\n    if(value) {\n      props.setCityID(value.placeID);\n    }\n    else {\n      props.setCityID(null);\n    }\n  }\n\n  if(error) {\n    return <div> {error} </div>\n  }\n  else {\n\n    return <div>\n    <Grid container className=\"searchBar\" justify=\"center\" alignItems=\"center\" direction=\"row\">\n      <Grid item>\n        {(props.name === \"originSearchBar\") ? <FlightTakeoffIcon fontSize=\"large\" /> : <FlightLandIcon fontSize=\"large\" />}\n      </Grid>\n      <Grid item>\n        <Autocomplete\n          name={props.name}\n          id={props.name}\n          onInputChange={handleInputText}\n          onChange={onCitySelection}\n          options={locationResults}\n          getOptionLabel={(option) => option.locationName}\n          style={{ width: 300 }}\n          renderInput={(params) => <TextField {...params} label={props.label} />}\n\n        /></Grid>\n    </Grid>\n    </div>;\n\n  }\n\n  \n}\n\nexport default SearchBar;","/Users/addisondunn/projects/fly-ai/src/components/Quote.jsx",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":61,"column":8,"nodeType":"56","endLine":61,"endColumn":10,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":26,"column":10,"nodeType":"60","messageId":"61","endLine":26,"endColumn":26},{"ruleId":"54","severity":1,"message":"62","line":53,"column":6,"nodeType":"56","endLine":53,"endColumn":18,"suggestions":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history.location.state' and 'quote_query_url'. Either include them or remove the dependency array.","ArrayExpression",["66"],"no-unused-vars","'didLocationsLoad' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'location_query_url'. Either include it or remove the dependency array.",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},{"desc":"70","fix":"71"},"Update the dependencies array to be: [history.location.state, quote_query_url]",{"range":"72","text":"73"},"Update the dependencies array to be: [location_query_url, searchText]",{"range":"74","text":"75"},[2073,2075],"[history.location.state, quote_query_url]",[2020,2032],"[location_query_url, searchText]"]