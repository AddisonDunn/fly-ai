{"ast":null,"code":"var _jsxFileName = \"/Users/addisondunn/projects/my-dashboard/src/components/SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport \"./StartingPage.css\";\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport FlightLandIcon from '@material-ui/icons/FlightLand';\nimport Grid from '@material-ui/core/Grid';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cities = [\"Paris\", \"London\"];\n\nfunction SearchBar(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [didLocationsLoad, setDidLocationsLoad] = useState(false);\n  const [[locationResults], setLocationResults] = useState([]);\n  const [airportOptions, setAirportOptions] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/getLocation/lon\").then(res => res.json()).then(result => {\n      setDidLocationsLoad(true);\n      setLocationResults(result.body);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setDidLocationsLoad(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No results found (try a city name).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this);\n  } else if (!didLocationsLoad) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", locationResults]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this);\n  } // return <div><Grid container className=\"searchBar\"  justify=\"center\" alignItems=\"center\" direction=\"row\">\n  //   <Grid item>\n  //     {(props.name === \"originSearchBar\") ? <FlightTakeoffIcon fontSize=\"large\" /> : <FlightLandIcon fontSize=\"large\" />}\n  //   </Grid>\n  //   <Grid item>\n  //     <Autocomplete\n  //       name={props.name}\n  //       id={props.name}\n  //       options={cities}\n  //       getOptionLabel={(option) => option}\n  //       style={{ width: 300 }}\n  //       renderInput={(params) => <TextField {...params} label={props.label}/>}\n  //     /></Grid>\n  //     </Grid>\n  //     </div>;\n\n}\n\n_s(SearchBar, \"kOi8aYF77N4fWYmaYr476QkiqmQ=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/addisondunn/projects/my-dashboard/src/components/SearchBar.jsx"],"names":["TextField","Autocomplete","FlightTakeoffIcon","FlightLandIcon","Grid","useEffect","useState","cities","SearchBar","props","error","setError","didLocationsLoad","setDidLocationsLoad","locationResults","setLocationResults","airportOptions","setAirportOptions","fetch","then","res","json","result","body"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAO,oBAAP;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,MAAM,GAAG,CACb,OADa,EAEb,QAFa,CAAf;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAExB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAAC,CAACQ,eAAD,CAAD,EAAoBC,kBAApB,IAA0CT,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRT,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAE,MAAAA,kBAAkB,CAACO,MAAM,CAACC,IAAR,CAAlB;AACH,KANT,EAOQ;AACA;AACA;AACCb,IAAAA,KAAD,IAAW;AACPG,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAbT;AAeH,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFH,MAES,IAAI,CAACE,gBAAL,EAAuB;AAC5B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACI;AAAA,sBAAOE,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD,GAjCqB,CAsCxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACD;;GAtDQN,S;;KAAAA,S;AAwDT,eAAeA,SAAf","sourcesContent":["import TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport \"./StartingPage.css\";\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport FlightLandIcon from '@material-ui/icons/FlightLand';\nimport Grid from '@material-ui/core/Grid';\nimport { useEffect, useState } from \"react\";\n\nconst cities = [\n  \"Paris\",\n  \"London\"];\n\nfunction SearchBar(props) {\n\n  const [error, setError] = useState(null);\n  const [didLocationsLoad, setDidLocationsLoad] = useState(false);\n  const [[locationResults], setLocationResults] = useState([]);\n  const [airportOptions, setAirportOptions] = useState([]);\n\n  useEffect(() => {\n      fetch(\"http://localhost:8080/getLocation/lon\")\n          .then(res => res.json())\n          .then(\n              (result) => {\n                  setDidLocationsLoad(true);\n                  setLocationResults(result.body);\n              },\n              // Note: it's important to handle errors here\n              // instead of a catch() block so that we don't swallow\n              // exceptions from actual bugs in components.\n              (error) => {\n                  setDidLocationsLoad(true);\n                  setError(error);\n              }\n          )\n  }, [])\n\n  if (error) {\n      return <div>No results found (try a city name).</div>;\n    } else if (!didLocationsLoad) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n          <div> {locationResults}</div>\n      );\n    }\n\n\n\n\n  // return <div><Grid container className=\"searchBar\"  justify=\"center\" alignItems=\"center\" direction=\"row\">\n  //   <Grid item>\n  //     {(props.name === \"originSearchBar\") ? <FlightTakeoffIcon fontSize=\"large\" /> : <FlightLandIcon fontSize=\"large\" />}\n  //   </Grid>\n  //   <Grid item>\n  //     <Autocomplete\n  //       name={props.name}\n  //       id={props.name}\n  //       options={cities}\n  //       getOptionLabel={(option) => option}\n  //       style={{ width: 300 }}\n  //       renderInput={(params) => <TextField {...params} label={props.label}/>}\n\n  //     /></Grid>\n  //     </Grid>\n  //     </div>;\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}