{"ast":null,"code":"var _jsxFileName = \"/Users/addisondunn/projects/my-dashboard/src/components/SearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport qs from 'query-string';\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchResults() {\n  _s();\n\n  let history = useHistory();\n  const [error, setError] = useState(null);\n  const [didSearchResultsLoad, setDidSearchResultsLoad] = useState(false);\n  const [quotes, setQuotes] = useState([]);\n  const [carriers, setCarriers] = useState([]);\n  const [places, setPlaces] = useState([]);\n  useEffect(() => {\n    const query = {\n      originID: history.location.state[0],\n      destinationID: history.location.state[1],\n      departureDate: history.location.state[2],\n      arrivalDate: history.location.state[3]\n    };\n    console.log(qs.stringify(query));\n    fetch(\"http://localhost:8080/search?\" + qs.stringify(query), {\n      method: \"GET\"\n    }).then(res => res.json()).then(result => {\n      setDidSearchResultsLoad(true);\n      setQuotes(result.Quotes);\n      setCarriers(result.Carriers);\n      setPlaces(result.Places);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setDidSearchResultsLoad(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  } else if (!didSearchResultsLoad) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  } else if (!quotes.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\\"No Quotes found.\\\" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(quotes), /*#__PURE__*/_jsxDEV(Quote, {\n        id: quotes[0].QuoteId,\n        minPrice: quotes[0].MinPrice,\n        isDirect: quotes[0].Direct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this);\n  } // return <div> {history.location.state} </div>\n\n}\n\n_s(SearchResults, \"+368dpPQuOTfSVskdj0xEQxl7pg=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/addisondunn/projects/my-dashboard/src/components/SearchResults.jsx"],"names":["useEffect","useState","useHistory","qs","Grid","SearchResults","history","error","setError","didSearchResultsLoad","setDidSearchResultsLoad","quotes","setQuotes","carriers","setCarriers","places","setPlaces","query","originID","location","state","destinationID","departureDate","arrivalDate","console","log","stringify","fetch","method","then","res","json","result","Quotes","Carriers","Places","message","length","QuoteId","MinPrice","Direct"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport qs from 'query-string';\nimport Grid from '@material-ui/core/Grid';\n\n\n\nfunction SearchResults() {\n\n    let history = useHistory();\n\n    const [error, setError] = useState(null);\n    const [didSearchResultsLoad, setDidSearchResultsLoad] = useState(false);\n    const [quotes, setQuotes] = useState([]);\n    const [carriers, setCarriers] = useState([]);\n    const [places, setPlaces] = useState([]);\n\n    useEffect(() => {\n        const query = {originID: history.location.state[0],\n            destinationID: history.location.state[1],\n            departureDate: history.location.state[2],\n            arrivalDate: history.location.state[3]\n        }\n        console.log(qs.stringify(query))\n        fetch(\"http://localhost:8080/search?\" + qs.stringify(query), {\n            method: \"GET\"\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setDidSearchResultsLoad(true);\n                    setQuotes(\n                        result.Quotes\n                    );\n                    setCarriers(result.Carriers);\n                    setPlaces(result.Places)\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setDidSearchResultsLoad(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!didSearchResultsLoad) {\n        return <div>Loading...</div>;\n      } else if(!quotes.length) {\n        return <div>\"No Quotes found.\" </div>\n      }\n        else {\n        return (<div>\n\n            { console.log(quotes) }\n\n            {/* <Grid container direction=\"column\" spacing={3}> */}\n            <Quote id={quotes[0].QuoteId} minPrice={quotes[0].MinPrice} isDirect={quotes[0].Direct} />\n            {/* {quotes.map( (elem) => \n                 <div>Quote ID: {elem.QuoteId}</div>\n              )} */}\n            \n            {/* </Grid> */}\n            </div>\n        );\n      }\n\n    // return <div> {history.location.state} </div>\n\n\n}\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}