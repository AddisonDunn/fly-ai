{"ast":null,"code":"var _jsxFileName = \"/Users/addisondunn/projects/my-dashboard/src/components/SearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchResults() {\n  _s();\n\n  let history = useHistory(); // const [error, setError] = useState(null);\n  // const [didSearchResultsLoad, setDidSearchResultsLoad] = useState(false);\n  // const [searchResults, setSearchResults] = useState([]);\n  // useEffect(() => {\n  //     fetch(\"http://localhost:8080/search\")\n  //         .then(res => res.json())\n  //         .then(\n  //             (result) => {\n  //                 setDidSearchResultsLoad(true);\n  //                 setSearchResults([\"load successful\"]);\n  //             },\n  //             // Note: it's important to handle errors here\n  //             // instead of a catch() block so that we don't swallow\n  //             // exceptions from actual bugs in components.\n  //             (error) => {\n  //                 setDidSearchResultsLoad(true);\n  //                 setError(error);\n  //             }\n  //         )\n  // }, [])\n  // if (error) {\n  //     return <div>Error: {error.message}</div>;\n  //   } else if (!didSearchResultsLoad) {\n  //     return <div>Loading...</div>;\n  //   } else {\n  //     return (<div>\n  //         <div> {searchResults}</div>\n  //         <div> {history.location.state[0]} </div> \n  //         </div>\n  //     );\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", history.location.state, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n}\n\n_s(SearchResults, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/addisondunn/projects/my-dashboard/src/components/SearchResults.jsx"],"names":["useEffect","useState","useHistory","SearchResults","history","location","state"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAGA,SAASC,aAAT,GAAyB;AAAA;;AAErB,MAAIC,OAAO,GAAGF,UAAU,EAAxB,CAFqB,CAIrB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAO;AAAA,oBAAOE,OAAO,CAACC,QAAR,CAAiBC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;GAzCQH,a;UAESD,U;;;KAFTC,a;AA2CT,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\n\n\nfunction SearchResults() {\n\n    let history = useHistory();\n\n    // const [error, setError] = useState(null);\n    // const [didSearchResultsLoad, setDidSearchResultsLoad] = useState(false);\n    // const [searchResults, setSearchResults] = useState([]);\n\n    // useEffect(() => {\n    //     fetch(\"http://localhost:8080/search\")\n    //         .then(res => res.json())\n    //         .then(\n    //             (result) => {\n    //                 setDidSearchResultsLoad(true);\n    //                 setSearchResults([\"load successful\"]);\n    //             },\n    //             // Note: it's important to handle errors here\n    //             // instead of a catch() block so that we don't swallow\n    //             // exceptions from actual bugs in components.\n    //             (error) => {\n    //                 setDidSearchResultsLoad(true);\n    //                 setError(error);\n    //             }\n    //         )\n    // }, [])\n\n    // if (error) {\n    //     return <div>Error: {error.message}</div>;\n    //   } else if (!didSearchResultsLoad) {\n    //     return <div>Loading...</div>;\n    //   } else {\n    //     return (<div>\n    //         <div> {searchResults}</div>\n    //         <div> {history.location.state[0]} </div> \n    //         </div>\n    //     );\n    //   }\n\n    return <div> {history.location.state} </div>\n\n\n}\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}