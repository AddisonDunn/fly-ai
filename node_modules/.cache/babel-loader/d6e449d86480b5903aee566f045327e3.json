{"ast":null,"code":"var _jsxFileName = \"/Users/addisondunn/projects/my-dashboard/src/components/SearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchResults() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [didSearchResultsLoad, setDidSearchResultsLoad] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    fetch(\"https://localhost:8080/search\").then(res => res.json()).then(result => {\n      setDidSearchResultsLoad(true);\n      setSearchResults(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setDidSearchResultsLoad(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  } else if (!didSearchResultsLoad) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" \", item.price]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this);\n  }\n}\n\n_s(SearchResults, \"7axHvZNQwTWiOVhx3Sh2d98Oa6s=\");\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/addisondunn/projects/my-dashboard/src/components/SearchResults.jsx"],"names":["useEffect","SearchResults","error","setError","useState","didSearchResultsLoad","setDidSearchResultsLoad","searchResults","setSearchResults","fetch","then","res","json","result","message","items","map","item","name","price","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;;AAGA,SAASC,aAAT,GAAyB;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDF,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,EAAD,CAAlD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRP,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAE,MAAAA,gBAAgB,CAACK,MAAD,CAAhB;AACH,KANT,EAOQ;AACA;AACA;AACCX,IAAAA,KAAD,IAAW;AACPI,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAH,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAbT;AAeH,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAACY,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFH,MAES,IAAI,CAACT,oBAAL,EAA2B;AAChC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA,gBACGU,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb;AAAA,mBACGA,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,KADpB;AAAA,SAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AAGN;;GAzCQnB,a;;KAAAA,a;AA2CT,eAAeA,aAAf","sourcesContent":["import { useEffect } from \"react\";\n\n\nfunction SearchResults() {\n\n    const [error, setError] = useState(null);\n    const [didSearchResultsLoad, setDidSearchResultsLoad] = useState(false);\n    const [searchResults, setSearchResults] = useState([]);\n\n    useEffect(() => {\n        fetch(\"https://localhost:8080/search\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setDidSearchResultsLoad(true);\n                    setSearchResults(result);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setDidSearchResultsLoad(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!didSearchResultsLoad) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <ul>\n            {items.map(item => (\n              <li key={item.id}>\n                {item.name} {item.price}\n              </li>\n            ))}\n          </ul>\n        );\n      }\n\n\n}\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}