{"ast":null,"code":"var _jsxFileName = \"/Users/addisondunn/projects/my-dashboard/src/components/SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport \"./StartingPage.css\";\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport FlightLandIcon from '@material-ui/icons/FlightLand';\nimport Grid from '@material-ui/core/Grid';\nimport { useEffect, useState } from \"react\";\nimport SearchResults from './SearchResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cities = [\"Paris\", \"London\"];\n\nfunction SearchBar(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [didLocationsLoad, setDidLocationsLoad] = useState(false);\n  const [locationResults, setLocationResults] = useState([]);\n  const [airportOptions, setAirportOptions] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/getLocation/lon\").then(res => res.json()).then(result => {\n      setDidLocationsLoad(true);\n      setLocationResults(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setDidLocationsLoad(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    // return <div style={{color: \"white\"}}>No results found (try a city name).</div>;\n    airportOptions = [\"Nothing found, enter a city name...\"];\n  } else if (!didLocationsLoad) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this);\n  } else {\n    {\n      console.log(locationResults);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      children: \" Success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this);\n  } // return <div><Grid container className=\"searchBar\"  justify=\"center\" alignItems=\"center\" direction=\"row\">\n  //   <Grid item>\n  //     {(props.name === \"originSearchBar\") ? <FlightTakeoffIcon fontSize=\"large\" /> : <FlightLandIcon fontSize=\"large\" />}\n  //   </Grid>\n  //   <Grid item>\n  //     <Autocomplete\n  //       name={props.name}\n  //       id={props.name}\n  //       options={cities}\n  //       getOptionLabel={(option) => option}\n  //       style={{ width: 300 }}\n  //       renderInput={(params) => <TextField {...params} label={props.label}/>}\n  //     /></Grid>\n  //     </Grid>\n  //     </div>;\n\n}\n\n_s(SearchBar, \"qtKy+rVBeiFGcho6vkZIeELkqWQ=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/addisondunn/projects/my-dashboard/src/components/SearchBar.jsx"],"names":["TextField","Autocomplete","FlightTakeoffIcon","FlightLandIcon","Grid","useEffect","useState","SearchResults","cities","SearchBar","props","error","setError","didLocationsLoad","setDidLocationsLoad","locationResults","setLocationResults","airportOptions","setAirportOptions","fetch","then","res","json","result","console","log","color"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAO,oBAAP;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,MAAM,GAAG,CACb,OADa,EAEb,QAFa,CAAf;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAExB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRT,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAE,MAAAA,kBAAkB,CAACO,MAAD,CAAlB;AACH,KANT,EAOQ;AACA;AACA;AACCZ,IAAAA,KAAD,IAAW;AACPG,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAbT;AAeH,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACP;AACAM,IAAAA,cAAc,GAAE,CAAC,qCAAD,CAAhB;AACD,GAHH,MAGS,IAAI,CAACJ,gBAAL,EAAuB;AAC5B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL;AAACW,MAAAA,OAAO,CAACC,GAAR,CAAYV,eAAZ;AAA6B;AAC9B,wBACI;AAAK,MAAA,KAAK,EAAE;AAACW,QAAAA,KAAK,EAAE;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD,GAnCqB,CAwCxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACD;;GAxDQjB,S;;KAAAA,S;AA0DT,eAAeA,SAAf","sourcesContent":["import TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport \"./StartingPage.css\";\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport FlightLandIcon from '@material-ui/icons/FlightLand';\nimport Grid from '@material-ui/core/Grid';\nimport { useEffect, useState } from \"react\";\nimport SearchResults from './SearchResults';\n\nconst cities = [\n  \"Paris\",\n  \"London\"];\n\nfunction SearchBar(props) {\n\n  const [error, setError] = useState(null);\n  const [didLocationsLoad, setDidLocationsLoad] = useState(false);\n  const [locationResults, setLocationResults] = useState([]);\n  const [airportOptions, setAirportOptions] = useState([]);\n\n  useEffect(() => {\n      fetch(\"http://localhost:8080/getLocation/lon\")\n          .then(res => res.json())\n          .then(\n              (result) => {\n                  setDidLocationsLoad(true);\n                  setLocationResults(result);\n              },\n              // Note: it's important to handle errors here\n              // instead of a catch() block so that we don't swallow\n              // exceptions from actual bugs in components.\n              (error) => {\n                  setDidLocationsLoad(true);\n                  setError(error);\n              }\n          )\n  }, [])\n\n  if (error) {\n      // return <div style={{color: \"white\"}}>No results found (try a city name).</div>;\n      airportOptions= [\"Nothing found, enter a city name...\"]\n    } else if (!didLocationsLoad) {\n      return <div>Loading...</div>;\n    } else {\n      {console.log(locationResults)}\n      return (\n          <div style={{color: \"white\"}}> Success</div>\n      );\n    }\n\n\n\n\n  // return <div><Grid container className=\"searchBar\"  justify=\"center\" alignItems=\"center\" direction=\"row\">\n  //   <Grid item>\n  //     {(props.name === \"originSearchBar\") ? <FlightTakeoffIcon fontSize=\"large\" /> : <FlightLandIcon fontSize=\"large\" />}\n  //   </Grid>\n  //   <Grid item>\n  //     <Autocomplete\n  //       name={props.name}\n  //       id={props.name}\n  //       options={cities}\n  //       getOptionLabel={(option) => option}\n  //       style={{ width: 300 }}\n  //       renderInput={(params) => <TextField {...params} label={props.label}/>}\n\n  //     /></Grid>\n  //     </Grid>\n  //     </div>;\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}