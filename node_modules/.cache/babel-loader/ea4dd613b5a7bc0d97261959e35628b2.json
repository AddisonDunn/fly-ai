{"ast":null,"code":"var _jsxFileName = \"/Users/addisondunn/projects/my-dashboard/src/components/SearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchResults() {\n  _s();\n\n  let history = useHistory();\n  const [error, setError] = useState(null);\n  const [didSearchResultsLoad, setDidSearchResultsLoad] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    const query = {\n      originID: history.location.state[0],\n      destinationID: history.location.state[0],\n      departureDate: history.location.state[0],\n      arrivalDate: history.location.state[0]\n    };\n    var queryString = \"?originID=$(history.location.state[0])&destinationID=$(history.location.state[1])&departureDate=$(history.location.state[2])&arrivalDate=$(history.location.state[4])\";\n    fetch(\"http://localhost:8080/search\" + queryString, {\n      method: \"GET\"\n    }).then(res => res.json()).then(result => {\n      setDidSearchResultsLoad(true);\n      setSearchResults([\"load successful\"]);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setDidSearchResultsLoad(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  } else if (!didSearchResultsLoad) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", searchResults]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", history.location.state, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this);\n  } // return <div> {history.location.state} </div>\n\n}\n\n_s(SearchResults, \"IApUOpQcII5n/J20TJ87W36Wh5k=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/addisondunn/projects/my-dashboard/src/components/SearchResults.jsx"],"names":["useEffect","useState","useHistory","SearchResults","history","error","setError","didSearchResultsLoad","setDidSearchResultsLoad","searchResults","setSearchResults","query","originID","location","state","destinationID","departureDate","arrivalDate","queryString","fetch","method","then","res","json","result","message"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAGA,SAASC,aAAT,GAAyB;AAAA;;AAErB,MAAIC,OAAO,GAAGF,UAAU,EAAxB;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,oBAAD,EAAuBC,uBAAvB,IAAkDP,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,KAAK,GAAG;AAACC,MAAAA,QAAQ,EAAER,OAAO,CAACS,QAAR,CAAiBC,KAAjB,CAAuB,CAAvB,CAAX;AACVC,MAAAA,aAAa,EAAEX,OAAO,CAACS,QAAR,CAAiBC,KAAjB,CAAuB,CAAvB,CADL;AAEVE,MAAAA,aAAa,EAAEZ,OAAO,CAACS,QAAR,CAAiBC,KAAjB,CAAuB,CAAvB,CAFL;AAGVG,MAAAA,WAAW,EAAEb,OAAO,CAACS,QAAR,CAAiBC,KAAjB,CAAuB,CAAvB;AAHH,KAAd;AAKA,QAAII,WAAW,GAAG,uKAAlB;AACAC,IAAAA,KAAK,CAAC,iCAAiCD,WAAlC,EAA+C;AAChDE,MAAAA,MAAM,EAAE;AADwC,KAA/C,CAAL,CAGKC,IAHL,CAGUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHjB,EAIKF,IAJL,CAKSG,MAAD,IAAY;AACRhB,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAE,MAAAA,gBAAgB,CAAC,CAAC,iBAAD,CAAD,CAAhB;AACH,KART,EASQ;AACA;AACA;AACCL,IAAAA,KAAD,IAAW;AACPG,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAfT;AAiBH,GAxBQ,EAwBN,EAxBM,CAAT;;AA0BA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAACoB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFH,MAES,IAAI,CAAClB,oBAAL,EAA2B;AAChC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBAAQ;AAAA,8BACJ;AAAA,wBAAOE,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAA,wBAAOL,OAAO,CAACS,QAAR,CAAiBC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAKD,GA5CkB,CA8CrB;;AAGH;;GAjDQX,a;UAESD,U;;;KAFTC,a;AAmDT,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\n\n\nfunction SearchResults() {\n\n    let history = useHistory();\n\n    const [error, setError] = useState(null);\n    const [didSearchResultsLoad, setDidSearchResultsLoad] = useState(false);\n    const [searchResults, setSearchResults] = useState([]);\n\n    useEffect(() => {\n        const query = {originID: history.location.state[0],\n            destinationID: history.location.state[0],\n            departureDate: history.location.state[0],\n            arrivalDate: history.location.state[0],\n        }\n        var queryString = \"?originID=$(history.location.state[0])&destinationID=$(history.location.state[1])&departureDate=$(history.location.state[2])&arrivalDate=$(history.location.state[4])\";\n        fetch(\"http://localhost:8080/search\" + queryString, {\n            method: \"GET\"\n            })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setDidSearchResultsLoad(true);\n                    setSearchResults([\"load successful\"]);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setDidSearchResultsLoad(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!didSearchResultsLoad) {\n        return <div>Loading...</div>;\n      } else {\n        return (<div>\n            <div> {searchResults}</div>\n            <div> {history.location.state} </div> \n            </div>\n        );\n      }\n\n    // return <div> {history.location.state} </div>\n\n\n}\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}